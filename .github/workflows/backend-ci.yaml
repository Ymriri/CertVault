name: CertVault Backend Deploy

on:
  push:
    branches:
      - dev
    paths:
      - server/**
#  release:
#    types:
#      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-backend:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 JDK 环境
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 使用 Maven 打包后端项目
      - name: Build with Maven
        run: mvn clean package -f server/pom.xml

      # 获取 Maven 版本并设置为环境变量
      - name: Get Maven version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -f server/pom.xml)" >> $GITHUB_ENV

      # 修改 Chart.yaml 文件中的版本字段
      - name: Update Chart.yaml version
        run: |
          sed -i "s/version: .*/version: ${{ env.VERSION }}/" server/helm/Chart.yaml

      # 登录到 GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 构建 Docker 镜像
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: server/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-helm:
    runs-on: ubuntu-latest
    needs: build-backend
    permissions:
      contents: write
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 确保 publish_dir 包含有效的静态文件
      - name: Generate static files for GitHub Pages
        run: |
          mkdir -p server/helm/docs
          echo "<html><body><h1>CertVault Helm Chart</h1></body></html>" > server/helm/docs/index.html

      # 配置 GitHub Pages
      - name: Setup GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: server/helm
          commit_message: "Deploy Helm chart to GitHub Pages"
          # 明确指定 GitHub Pages 分支
          publish_branch: gh-pages
          force_orphan: true