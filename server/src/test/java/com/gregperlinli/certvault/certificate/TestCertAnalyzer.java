package com.gregperlinli.certvault.certificate;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gregperlinli.certvault.domain.entities.CertificateDetails;
import jakarta.annotation.Resource;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * Test Certificate Decoder
 *
 * @author gregPerlinLi
 * @version 1.0.0
 * @className {@code TestCertDecoder}
 * @date 2025/3/15 16:33
 */
@SpringBootTest
@Slf4j
public class TestCertAnalyzer {

    @Resource
    private ObjectMapper objectMapper;

    @Test
    public void testAnalyzeCertificate() throws Exception {
        String certBase64 = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNIakNDQWRDZ0F3SUJBZ0lSQU02Qnl6VGNLd3VrUGZjb3V3NmtyMmt3QlFZREsyVndNSUdkTVFzd0NRWUQKVlFRR0V3SkRUakVTTUJBR0ExVUVDQXdKUjNWaGJtZGtiMjVuTVE4d0RRWURWUVFIREFaRFlXNTBiMjR4RlRBVApCZ05WQkFvTURFZHlaV2RRWlhKc2FXNU1hVEVTTUJBR0ExVUVDd3dKUTJWeWRGWmhkV3gwTVJVd0V3WURWUVFECkRBeERaWEowVm1GMWJIUWdRMEV4SnpBbEJna3Foa2lHOXcwQkNRRVdHR2R5WldkUVpYSnNhVzVNYVVCdmRYUnMKYjI5ckxtTnZiVEFlRncweU5UQTBNakF4TVRBNU1UUmFGdzB6TlRBME1UZ3hNVEE1TVRSYU1JR2RNUXN3Q1FZRApWUVFHRXdKRFRqRVNNQkFHQTFVRUNBd0pSM1ZoYm1ka2IyNW5NUTh3RFFZRFZRUUhEQVpEWVc1MGIyNHhGVEFUCkJnTlZCQW9NREVkeVpXZFFaWEpzYVc1TWFURVNNQkFHQTFVRUN3d0pRMlZ5ZEZaaGRXeDBNUlV3RXdZRFZRUUQKREF4RFpYSjBWbUYxYkhRZ1EwRXhKekFsQmdrcWhraUc5dzBCQ1FFV0dHZHlaV2RRWlhKc2FXNU1hVUJ2ZFhScwpiMjlyTG1OdmJUQXFNQVVHQXl0bGNBTWhBUFRGdFRLZWJLUTJLZmdNd1MvbXZXUXJBck1yS3JLcmlSUzBYMkdDCnlVUldveU13SVRBT0JnTlZIUThCQWY4RUJBTUNBWVl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFGQmdNclpYQUQKUVFCT1phMEFDVGYzck41YzVXbUplMDFWQXJ1d2laZk8za0FaUHB6QVp6c2VYR0JSdWdTdjRxUUVZamRxSUlpZApJQU5WdGF5dEdWZXFuRkFKZTZjU24yVU4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=";
        CertificateDetails certificateDetails = CertAnalyzer.analyzeCertificate(certBase64);
        log.debug("certificateDetails: {}", certificateDetails);

        String json = objectMapper.writeValueAsString(certificateDetails);
        log.info("certificateDetails JSON: {}", json);
    }

    @Test
    public void testCertVerify() throws Exception {
        String privkeyBase64 = "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRRHpUWFJBTDFBQW1uQmYKTi9LelRaZ3RhUlNwTFFsc01ORFdpNVdpVmNYek9mZEE2czA0RlIyRkxjaElzUGpsSUhudzBadDhURmh4bTNjLwo1RnQxbWVRNW0rY1R5MjdncUtkNkp6bUE2dXk1SS9IY3N4ZUViRTNUMXNJa0NMN3JQRkFZeVcrbHhoQzVwMDNzCmhQREcrdkdxcXMyQk5OeFRoUjRKd3g3cUhrOGYxbDRBS2NXQVpmN2NWVFlxNFNyTGtkZkxDNzZnWUo4K3N5S24KYUtTRnhHd0F1RkNhbXZWd01WT3d6YVZ2TS8yU3lGWDBwNWlIQmo5aXAzSEVLb1p5MWdjakZoYngwdnB3c3RYcQplMDQ1eWlPTk5VUXc4dmdWclJ2Mzg3TEkzdk5ITDIvZ2tyTlNMWjJHSm5wcm9SeTJhK2J1OEtFUTRzSkQ4WTRVCnFOOFlUcjFBWWI3MnlNWGFmU1pWeHVKLzZOVDFGbzNIb01IUnRBZnkwcGQ2VlJsdFl1N0Z2Tit0d1k3Z2xNc1oKSUNlQ2tiVTV3S09VMUcvbkRDVGtwSDE5cnNIU1RHVkdXaXhOTzJkb3hmL3hsT21BYTR6VlJwY1RHc1J0M0ZDdwprMkZzL1JNR3YwcjJrWm1qandpSHV4OUcza3RKZ09rT0luRFdWRCswVUY3ODJPWk4xRWs1NnNFVmFsY255ZVRiCnRJNEJJVEtsendzZldFeU9PN3BSN2VVbXFTWjZtWFRieXZtY2ZNbWc5R1k0dG8rZlJ4d1lWaGE5UTV4cTR6WFQKdC9MUUQxMi9DZ3AyOUlsL3ozcTR1UDAxNkhYOEdtZmJ1UTk1NWdsMjYyejl6RmtNQnpWZTRaYjR2akNJZkZ1eApvZ0xIRWpmWmVXN21hdVlwTGdoVHpZRWVuZ2ZOYVFJREFRQUJBb0lDQUFFcEhVejVsTTE5N3h1TExDZVdEd3ZuCmFJdHlqUzBVa2doMTk3K2pubHM5eTJ2R092YWhwaWVHbTRJYVF3T3Z5eGtlbk5uajBOZXc1TW1ibktLVDJucDYKWDRpeEE1MURmTElJMmgyKzhTUmtjeURKQTJ1VXF5M2ZwRU13L2Ywb0IxOUk1YlVTRys0UXlkNi9GeGx4NU1GNgpTVnJzamtFQlBXNlJQVlpqVU9BUFlSa3AyZGoyRTVoSU9VY00xaXdNck8xNVo3NUMyN3VjTmVYN3lpNGZyTjYzCmdsM3NiNCtLa3JKQkZ1RVFDODE5a21obGZNVW5IdG9JLzdKT2ZCL3ozS3Fhamo4MjBRNUUwaCtwV1NzT0oydUMKNWFtQW5UV1lRdTRFdmZWMmw4MC9BUTcra0Nlc0UwaHFxbEtWWFFwVE96R29XUEpZVEpJdnBxeDdUajRpMFFVSgpXTUZxVmhoL0wwc3doUE8rYm5DQ3VMR25BM2VrUEJPSmhKR0dWQTB2ZytCVmQ0ZnZJR0ZTL1VMTU9SUlBhMDMvClJ5Qjhjd21IeEVCbktXcW5lc1dlbWtpOVJqTXZ0MFc1NmdjcUFjVTMxOHBYNFNpWHhuMmQrekJPd3JvS2tzdjAKTElrOGxEWEtEV2xrYit1Q0tydHcwL0VMVWNRQTFuYWVBb0lGamQ2Sno1emdrcWRQM2xQbFRYbFluUlVDRTdJVApBUzZEeHY0UEFKOUxoUFczR1A3aXl1WXJGSzh4OFR4TFQzL3Z0TmtPb25XUTR3VWhiMXBXcnJSbk02QWd0aXZBCnNmS0xOeFF5QTdYRTlaS1BqYUFHS2RpRDNMZ2Rkcm1ReFNoczJKSEJ0SkhqMkNtV0RsTHg3VkN4QzRhcWN0Uk4KQ0Q0U28yTGdNUCtlSTJlU2RNcUJBb0lCQVFEM05Bd2NuR1NaSHBaSTA0SzVTTHFIZnYzR1k2Rms5UDc5MS9QQwpCN3ZHMUM3Qi83cVRXcGtvclJhV09KWk05ZkkxUDlkM0NMbGIrTjZlM0JEZFYyZG43MHV2cGlTRmZwWmovWDVGCnRWSVpEMkhTcHRMdk9BTk9QOHphTzhlb3RYVWIrbmZXTWpFNGhlZ1k1WjROT3cvTVBqL2ozb3ZxQkpLdTc2ai8Kb2l2WlJqM0QxK05SeitRRDhFQWhhRWlOQkdvQm8rbXdOS1pNV0FkNFZRcTZLekcxeFh2WW5DSjZVcG5URFVvRAp4QzI3NzFhNlBNNDZJS3dTWTEzaTVPWGJzbytiUitzNGhFa3BwMDJPanluSWRROGkxaE9DRnBBVFZmTzlQa0FkClRvZEw2Q0xTU0kveW1NdUd2NVBVUU5FS2RDT3FCNGxFdXdGMW9kMTd6cS9OV0NLQkFvSUJBUUQ3OWQ4OFJrSDQKUTZEd0VxbkJrUHdYSVZFQWN5WE9JTURIZFJObkdEdTliQmJBQnRNM3hmbnc2TnJ3Wkp2UXlGc0hDa1EyTGk1YwpVRk1SSStENmEzWmJZT3VTVUk0ZGJhRCswZmh6TDM0ci92eklMYkJPc1F2bFZTR1c3bFJTamFmRmdybGtWeE1pClByUFIzNkRDOGdzdmZmbUloeTBvY1FKVXFsem9adllnSllmU2lyWFFXbXQ3OUVmNllsSDh1aU1TZlp4QkF3NkgKVjJibXhLSEZxUnFYZ0ZKWmRZS0JDWjM0US9PTGtDcWZoK1YxU3pzZ2JPSk9MUzdFOWVYVTJDWnVzc3Fuak9tWQo1MW5Vcmh1VXBLTUlRaHBYVktWTUlMU2Z1SFZxUXFFcXozV240WFF1MmlzWTBCNjhzTEhIRTl1WGV1NUtJVkUyCjZxbGkramdRa1dicEFvSUJBUURNOGl1d2RNQzZhYTl6QlZoMXdLUlV2YVlzR21HdVQ2Z3dVQi9abDR2SWxoV0YKNVR5TCtpck1uR1FEZXpxdzU1ODlJb2JDTzB0aHd2emVlOWpIaVRWRDZCSzV0MmJEL21VMDFPOGhYK2lHdWtnQgoyeWs2QnhoR2dZS1cwOFQrVENLaFpaQ0ExdkFUeW9EWVUxWXI1ZkY5QlliMnBvVWRLVmxyQzJyek5VSmhTbWplCnUxZk5kaXUyVURMNi8zaFc0WGY1a0Ntb1dwNGM0VWFnTHZGTDA0L05BY05obkdEQlJVWWV3Zi9CQzU1WEYyQ3gKMnNPblVYc1hhNlprL0J6TmZrYXRHSDBkU0I5WUYwcW5qRzI1c2NNd3dJYy83UERaOXdLeXZLOXZITEh5N3F3Zgo1dVRnM21pdWVKcFkrTHZXak44Y2trN3QycFNsTCtOdVI3ZGM2VnNCQW9JQkFIeHl1dXBZZ1drUWJrTmwxSGNKCkY1cU5HQ2N5dUsrUk9lYktpdVRXOFZya01uQnlibzBUdWhvbHlVNEhRM2JpSHlQaERFUCtsMk45UVNvc0lJbFAKM3N2UG1VdFJnb0JDajh5TkJUeFBidkJvSjQ3d0VpOHIvNFlzZ0VTK1B1UHZsN2hVa3lGZWFOTDNTWFlXRUo5NQpVZEVKVmVEN2MzQ1FNT2lFcFJNZEYrQlU2VHN5ekE2M09uT2srcEJQVTlPU1ZKUmplblFhQUdrVTRIeUhEcWhFCm1CL1FmOXd6MEZ2UDFqaXp4MjFkcmMvU0hhSExvTTZwT1RZSDF4dnRvTEY2ZWJFZm1qMGJ1cDJOVjY5V3Q4UzUKZE5VMVlURlZXN2U0Ujc3RUt5cHE4cFBrbUdadFV5ZDVGdVJRbDMzM2dEZW1OVVlpcitQcGhPV3REakVYQ2U0VgpBMUVDZ2dFQkFPZDlNYkcwK1I4MWo0R0dwSlpGU2IzYlB5bXNqZnp6TDFWUzlsYktqSUpEdng0czk2Mm1BTm95CnJyTHhqR3RBcmtIMGt4L25wWm4rdm1aUmQzNzVaSTM1TFlhZnNKTU5Vd2JaaFhnam9XY2VTRTZGSW5ZdEk4WWEKRFJoWUFtb2w0eHh5dUNwaXlLRzg5WVFDK2laRTkxNHB2UzdoaFJhTU4zcDh0SEk3N2p0OEhyOEl0QWxsRXlpKwpEcEh4SnBndGtYVWRaZ1BOL2hETWZ6NnY4a3A3UHJJeXRwWDIwVTBncE5aenJsOW5VQU1kOTF2cW05dE1aWmpMCnVJRGI1Mlk2anFaeXFnSWpsOGMrSUtVL3JzWStBelJDblBOV3BqYUovNStvKzZNWm52RlA4VldRemZucGU5bjQKSzUzWCsyWkF2V3NPMlNjV0gxWnp0V3VSQXBKSk1Paz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==";
        String certBase64 = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdFekNDQS91Z0F3SUJBZ0lVV1hCYzM2c3lxcjBEMUUxakhPZ25XRHA4YTZjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daZ3hDekFKQmdOVkJBWVRBa05PTVJJd0VBWURWUVFJREFsSGRXRnVaMFJ2Ym1jeER6QU5CZ05WQkFjTQpCa05oYm5SdmJqRVFNQTRHQTFVRUNnd0hSMFJWVkU1SlF6RVJNQThHQTFVRUN3d0libWxqTFhSbFkyZ3hIekFkCkJnTlZCQU1NRmtkRVZWUk9TVU1nUTJWeWRDQkJkWFJvYjNKcGRIa3hIakFjQmdrcWhraUc5dzBCQ1FFV0QyNXAKWTBCblpIVjBibWxqTG1OdmJUQWVGdzB5TlRBeU1UQXdPRFUzTWpaYUZ3MHpOREV4TVRBd09EVTNNalphTUlHWQpNUXN3Q1FZRFZRUUdFd0pEVGpFU01CQUdBMVVFQ0F3SlIzVmhibWRFYjI1bk1ROHdEUVlEVlFRSERBWkRZVzUwCmIyNHhFREFPQmdOVkJBb01CMGRFVlZST1NVTXhFVEFQQmdOVkJBc01DRzVwWXkxMFpXTm9NUjh3SFFZRFZRUUQKREJaSFJGVlVUa2xESUVObGNuUWdRWFYwYUc5eWFYUjVNUjR3SEFZSktvWklodmNOQVFrQkZnOXVhV05BWjJSMQpkRzVwWXk1amIyMHdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFEelRYUkFMMUFBCm1uQmZOL0t6VFpndGFSU3BMUWxzTU5EV2k1V2lWY1h6T2ZkQTZzMDRGUjJGTGNoSXNQamxJSG53MFp0OFRGaHgKbTNjLzVGdDFtZVE1bStjVHkyN2dxS2Q2SnptQTZ1eTVJL0hjc3hlRWJFM1Qxc0lrQ0w3clBGQVl5VytseGhDNQpwMDNzaFBERyt2R3FxczJCTk54VGhSNEp3eDdxSGs4ZjFsNEFLY1dBWmY3Y1ZUWXE0U3JMa2RmTEM3NmdZSjgrCnN5S25hS1NGeEd3QXVGQ2FtdlZ3TVZPd3phVnZNLzJTeUZYMHA1aUhCajlpcDNIRUtvWnkxZ2NqRmhieDB2cHcKc3RYcWUwNDV5aU9OTlVRdzh2Z1ZyUnYzODdMSTN2TkhMMi9na3JOU0xaMkdKbnByb1J5MmErYnU4S0VRNHNKRAo4WTRVcU44WVRyMUFZYjcyeU1YYWZTWlZ4dUovNk5UMUZvM0hvTUhSdEFmeTBwZDZWUmx0WXU3RnZOK3R3WTdnCmxNc1pJQ2VDa2JVNXdLT1UxRy9uRENUa3BIMTlyc0hTVEdWR1dpeE5PMmRveGYveGxPbUFhNHpWUnBjVEdzUnQKM0ZDd2syRnMvUk1HdjByMmtabWpqd2lIdXg5RzNrdEpnT2tPSW5EV1ZEKzBVRjc4Mk9aTjFFazU2c0VWYWxjbgp5ZVRidEk0QklUS2x6d3NmV0V5T083cFI3ZVVtcVNaNm1YVGJ5dm1jZk1tZzlHWTR0bytmUnh3WVZoYTlRNXhxCjR6WFR0L0xRRDEyL0NncDI5SWwvejNxNHVQMDE2SFg4R21mYnVROTU1Z2wyNjJ6OXpGa01CelZlNFpiNHZqQ0kKZkZ1eG9nTEhFamZaZVc3bWF1WXBMZ2hUellFZW5nZk5hUUlEQVFBQm8xTXdVVEFkQmdOVkhRNEVGZ1FVcUV0YgpJVFIzSDVtT1BBdWh3RVVCZUhDNVhuZ3dId1lEVlIwakJCZ3dGb0FVcUV0YklUUjNINW1PUEF1aHdFVUJlSEM1ClhuZ3dEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFPZHQ4cEZxSzNCS2QKUzQ5YjFRWjY5cXBOY1pLU0R2OTdZa2xRMkxCam5uMk9DclErUUVza1FYT0kvaWc3aGgwMXk3aWlhdWVZQmZJWgpjaENDYjVudFNXNVBSbW10VVhhSnRsT3puRVo1RzlJSDZTcGVZRWx4OTg4T0RFcE9XVUZJTHFFRWR6VXlYZDdNCjRoMmRTeHlBeGFVR1BBenFTU1ZuV3dRUkJjSktNdXdRTmpGSUY5bnN3MlpiSTRTVUZvZ3lUei9YREZyVmE0cFMKSHN0NnN4REUvNHZPUWJnaGVSVjBvZG5oZ1I2aCtwNEZtSjFZZU9icGdUSDVBYXVkSjM2UThMcVBpWjN4Y0RIeQpjdHRVQXJqS3ljMVJNSEVsbTRWR1JMb3V0QTkzbTlxdXU5VFlhVDVoS3hvWWYzUUxSeHE3dEptRFE3RDhvNE1oCjFDa05FY0VXamRoN3VSVVhNcmtveDlnSXNIZVJXTWptcUQrSzI0M25tUXpmUjRqYWNmbkZPVTFtU2JtbEMwRVIKRnM0LzlVdzVRNE53aXoyc1dWVkJyQm1mUXh5S3FKTmJsckR2K3ZZaCswUUdIM3hkZlFBd25kVi93Z09vbE90cwpxbjR5Yyt1S1REZ25ReFdlZjAvN1l1RVlxQ2wycHQzN0tabWZ5SVpnU2FyT0tSZmpVcEpHWldWZjNTb2FGam1UCkVhbjF5OElMb2l1cm1mL0JCL285YThvYVJnZ1N3NzN3YTNQWE1UOUJGVXhuUnVZMlluNkxhSy9QVG1kNW44bUsKb1FxVGlBMlRIbGhBZ1FyeWxZQWRZeStDRVQxV1ZOdE5YK2c3Zzl3WHhMTG5aU3RUT1lqTjRjcGF6NXhybi9lcgpsbUxVQ3o3RTNrTmgzVkVZWlRWTXQyai9RQ2d6REU4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t";
        Boolean result = CertAnalyzer.certVerify(privkeyBase64, certBase64);
        assert result;
    }

    @Test
    public void testVerifyIsCa() throws Exception {
        String certBase64 = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdFekNDQS91Z0F3SUJBZ0lVV1hCYzM2c3lxcjBEMUUxakhPZ25XRHA4YTZjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daZ3hDekFKQmdOVkJBWVRBa05PTVJJd0VBWURWUVFJREFsSGRXRnVaMFJ2Ym1jeER6QU5CZ05WQkFjTQpCa05oYm5SdmJqRVFNQTRHQTFVRUNnd0hSMFJWVkU1SlF6RVJNQThHQTFVRUN3d0libWxqTFhSbFkyZ3hIekFkCkJnTlZCQU1NRmtkRVZWUk9TVU1nUTJWeWRDQkJkWFJvYjNKcGRIa3hIakFjQmdrcWhraUc5dzBCQ1FFV0QyNXAKWTBCblpIVjBibWxqTG1OdmJUQWVGdzB5TlRBeU1UQXdPRFUzTWpaYUZ3MHpOREV4TVRBd09EVTNNalphTUlHWQpNUXN3Q1FZRFZRUUdFd0pEVGpFU01CQUdBMVVFQ0F3SlIzVmhibWRFYjI1bk1ROHdEUVlEVlFRSERBWkRZVzUwCmIyNHhFREFPQmdOVkJBb01CMGRFVlZST1NVTXhFVEFQQmdOVkJBc01DRzVwWXkxMFpXTm9NUjh3SFFZRFZRUUQKREJaSFJGVlVUa2xESUVObGNuUWdRWFYwYUc5eWFYUjVNUjR3SEFZSktvWklodmNOQVFrQkZnOXVhV05BWjJSMQpkRzVwWXk1amIyMHdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFEelRYUkFMMUFBCm1uQmZOL0t6VFpndGFSU3BMUWxzTU5EV2k1V2lWY1h6T2ZkQTZzMDRGUjJGTGNoSXNQamxJSG53MFp0OFRGaHgKbTNjLzVGdDFtZVE1bStjVHkyN2dxS2Q2SnptQTZ1eTVJL0hjc3hlRWJFM1Qxc0lrQ0w3clBGQVl5VytseGhDNQpwMDNzaFBERyt2R3FxczJCTk54VGhSNEp3eDdxSGs4ZjFsNEFLY1dBWmY3Y1ZUWXE0U3JMa2RmTEM3NmdZSjgrCnN5S25hS1NGeEd3QXVGQ2FtdlZ3TVZPd3phVnZNLzJTeUZYMHA1aUhCajlpcDNIRUtvWnkxZ2NqRmhieDB2cHcKc3RYcWUwNDV5aU9OTlVRdzh2Z1ZyUnYzODdMSTN2TkhMMi9na3JOU0xaMkdKbnByb1J5MmErYnU4S0VRNHNKRAo4WTRVcU44WVRyMUFZYjcyeU1YYWZTWlZ4dUovNk5UMUZvM0hvTUhSdEFmeTBwZDZWUmx0WXU3RnZOK3R3WTdnCmxNc1pJQ2VDa2JVNXdLT1UxRy9uRENUa3BIMTlyc0hTVEdWR1dpeE5PMmRveGYveGxPbUFhNHpWUnBjVEdzUnQKM0ZDd2syRnMvUk1HdjByMmtabWpqd2lIdXg5RzNrdEpnT2tPSW5EV1ZEKzBVRjc4Mk9aTjFFazU2c0VWYWxjbgp5ZVRidEk0QklUS2x6d3NmV0V5T083cFI3ZVVtcVNaNm1YVGJ5dm1jZk1tZzlHWTR0bytmUnh3WVZoYTlRNXhxCjR6WFR0L0xRRDEyL0NncDI5SWwvejNxNHVQMDE2SFg4R21mYnVROTU1Z2wyNjJ6OXpGa01CelZlNFpiNHZqQ0kKZkZ1eG9nTEhFamZaZVc3bWF1WXBMZ2hUellFZW5nZk5hUUlEQVFBQm8xTXdVVEFkQmdOVkhRNEVGZ1FVcUV0YgpJVFIzSDVtT1BBdWh3RVVCZUhDNVhuZ3dId1lEVlIwakJCZ3dGb0FVcUV0YklUUjNINW1PUEF1aHdFVUJlSEM1ClhuZ3dEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFPZHQ4cEZxSzNCS2QKUzQ5YjFRWjY5cXBOY1pLU0R2OTdZa2xRMkxCam5uMk9DclErUUVza1FYT0kvaWc3aGgwMXk3aWlhdWVZQmZJWgpjaENDYjVudFNXNVBSbW10VVhhSnRsT3puRVo1RzlJSDZTcGVZRWx4OTg4T0RFcE9XVUZJTHFFRWR6VXlYZDdNCjRoMmRTeHlBeGFVR1BBenFTU1ZuV3dRUkJjSktNdXdRTmpGSUY5bnN3MlpiSTRTVUZvZ3lUei9YREZyVmE0cFMKSHN0NnN4REUvNHZPUWJnaGVSVjBvZG5oZ1I2aCtwNEZtSjFZZU9icGdUSDVBYXVkSjM2UThMcVBpWjN4Y0RIeQpjdHRVQXJqS3ljMVJNSEVsbTRWR1JMb3V0QTkzbTlxdXU5VFlhVDVoS3hvWWYzUUxSeHE3dEptRFE3RDhvNE1oCjFDa05FY0VXamRoN3VSVVhNcmtveDlnSXNIZVJXTWptcUQrSzI0M25tUXpmUjRqYWNmbkZPVTFtU2JtbEMwRVIKRnM0LzlVdzVRNE53aXoyc1dWVkJyQm1mUXh5S3FKTmJsckR2K3ZZaCswUUdIM3hkZlFBd25kVi93Z09vbE90cwpxbjR5Yyt1S1REZ25ReFdlZjAvN1l1RVlxQ2wycHQzN0tabWZ5SVpnU2FyT0tSZmpVcEpHWldWZjNTb2FGam1UCkVhbjF5OElMb2l1cm1mL0JCL285YThvYVJnZ1N3NzN3YTNQWE1UOUJGVXhuUnVZMlluNkxhSy9QVG1kNW44bUsKb1FxVGlBMlRIbGhBZ1FyeWxZQWRZeStDRVQxV1ZOdE5YK2c3Zzl3WHhMTG5aU3RUT1lqTjRjcGF6NXhybi9lcgpsbUxVQ3o3RTNrTmgzVkVZWlRWTXQyai9RQ2d6REU4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t";
        Boolean result = CertAnalyzer.verifyIsCa(certBase64);
        assert result;
    }

}
